resource "panos_vulnerability_security_profile" "this" {
  for_each = var.vulnerability_file != "optional" ? { for file in var.vulnerability_file : file.name => file } : tomap({})

  name         = each.key
  device_group = try(each.value.device_group, "shared")
  description  = try(each.value.description, null)

  dynamic "rule" {
    for_each = try(each.value.rule, null) != null ? { for rules in each.value.rule : rules.name => rules } : tomap({})
    content {
      name              = rule.value.name
      threat_name       = try(rule.value.threat_name, "any")
      cves              = try(rule.value.cves, ["any"])
      host              = try(rule.value.host, "any")
      vendor_ids        = try(rule.value.vendor_ids, ["any"])
      severities        = try(rule.value.severities, ["any"])
      category          = try(rule.value.category, "any")
      action            = try(rule.value.action, "default")
      block_ip_track_by = try(rule.value.action, null) == "block-ip" ? try(rule.value.block_ip_track_by, null) : null
      block_ip_duration = try(rule.value.action, null) == "block-ip" ? try(rule.value.block_ip_duration, null) : null
      packet_capture    = try(rule.value.packet_capture, "disable")
    }
  }

  dynamic "exception" {
    for_each = try(each.value.exception, null) != null ? { for ex in each.value.exception : ex.name => ex } : tomap({})
    content {
      name              = exception.value.name
      action            = try(exception.value.action, "default")
      block_ip_track_by = try(exception.value.action, null) == "block-ip" ? try(exception.value.block_ip_track_by, null) : null
      block_ip_duration = try(exception.value.action, null) == "block-ip" ? try(exception.value.block_ip_duration, null) : null
      packet_capture    = try(exception.value.packet_capture, "disable")
      time_interval     = try(exception.value.time_interval, null)
      time_threshold    = try(exception.value.time_threshold, null)
      time_track_by     = try(exception.value.time_track_by, null)
      exempt_ips        = try(exception.value.exempt_ips, null)
    }
  }
}